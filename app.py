import streamlit as st
from diagnosis_data import get_diagnosis
from doctor import get_nearest_clinic
from utils.speech_utils import recognize_speech
from streamlit_js_eval import get_geolocation

import pandas as pd

from deep_translator import GoogleTranslator
import random

messages = [
    "Based on your symptoms, you may have {disease}. {treatment}",
    "It seems like you might be suffering from {disease}. Recommended action: {treatment}",
    "Symptoms indicate {disease}. {treatment}",
    "You may be showing signs of {disease}. Best to follow this advice: {treatment}",
    "Possibly {disease}. Here's what you can do: {treatment}"
]

# Load clinic data
clinic_df = pd.read_excel("Odisha_Hospitals (1).xlsx")


st.set_page_config(page_title="Health Diagnosis Bot", layout="centered")

# Language selection
st.sidebar.title("ЁЯМР Choose Language")
language = st.sidebar.selectbox("Select Language", ["English", "Hindi", "Odia"])
st.session_state["lang"] = language

st.markdown("<div class='main'>", unsafe_allow_html=True)
st.image("https://cdn-icons-png.flaticon.com/512/2966/2966486.png", width=100)


 
 
# District-town mapping with translations
districts_translated = {
    "English": {
  "Cuttack": ["Cuttack", "Choudwar", "Narsinghpur", "Athagarh"],
  "Khordha": ["Bhubaneswar", "Jatni", "Begunia", "Balugaon"],
  "Puri": ["Puri", "Konark", "Satyabadi", "Delang"],
  "Balasore": ["Balasore", "Nilagiri", "Jaleswar", "Soro"],
  "Sambalpur": ["Sambalpur", "Burla", "Hirakud", "Rengali"],
  "Ganjam": ["Berhampur", "Chhatrapur", "Bhanjanagar", "Aska"],
  "Angul": ["Angul", "Talcher", "Athmallik", "Nalconagar"],
  "Balangir": ["Balangir", "Titlagarh", "Kantabanji", "Patnagarh"],
  "Boudh (Baudh)": ["Boudhgarh", "Baunsuni", "Kantamal", "Manamunda"],
  "Bargarh": ["Bargarh", "Barapali", "Padmapur", "Sohela"],
  "Bhadrak": ["Bhadrak", "Basudevpur", "Chandabali", "Dhamanagar"],
  "Jharsuguda": ["Jharsuguda", "Brajarajnagar", "Belpahar", "Bandhbahal"],
  "Dhenkanal": ["Dhenkanal", "Bhuban", "Kamakshyanagar", "Saranga"],
  "Jajpur": ["Jajpur", "Byasanagar", "Sayadpur", "Kabatabandha"],
  "Jagatsinghapur": ["Jagatsinghapur", "Paradip", "Paradipgarh", "Krushnanandapur"],
  "Keonjhar (Kendujhar)": ["Kendujhar", "Barbil", "Champua", "Jajanga"],
  "Kalahandi": ["Bhawanipatna", "Junagarh", "Kesinga", "Madhanpur Rampur"],
  "Koraput": ["Koraput", "Jeypore", "Sunabeda", "Kotpad"],
  "Kendrapara": ["Kendrapara", "Pattamundai", "Rajkanika", "Aul"],
  "Malkangiri": ["Malkangiri", "Balimela", "Chitrakonda", "Sunki"],
  "Mayurbhanj": ["Baripada", "Rairangpur", "Udala", "Karanjia"],
  "Nabarangapur": ["Nabarangpur", "Umerkote", "Papadahandi", "Raighar"],
  "Nuapada": ["Nuapada", "Khariar", "Khariar Road", "Komna"],
  "Nayagarh": ["Nayagarh", "Itamati", "Chandapur", "Odagaon"],
  "Rayagada": ["Rayagada", "Gunupur", "Kashipur", "Tikiri"],
  "Subarnapur (Sonepur)": ["Sonapur", "Binika", "Tarbha", "Sonepur Town"],
  "Sundargarh": ["Sundargarh", "Rourkela", "Rajgangpur", "Biramitrapur"]
},

  "Hindi": {
  "рдХрдЯрдХ": ["рдХрдЯрдХ", "рдЪреМрджреНрд╡рд╛рд░", "рдирд░рд╕рд┐рдВрд╣рдкреБрд░", "рдЕрдардЧрдбрд╝"],
  "рдЦреЛрд░рдзрд╛": ["рднреБрд╡рдиреЗрд╢реНрд╡рд░", "рдЬрдЯрдиреА", "рдмреЗрдЧреБрдирд┐рдпрд╛", "рдмрд▓реВрдЧрд╛рдВрд╡"],
  "рдкреБрд░реА": ["рдкреБрд░реА", "рдХреЛрдгрд╛рд░реНрдХ", "рд╕рддреНрдпрд╡рд╛рджреА", "рдбреЗрд▓рд╛рдВрдЧ"],
  "рдмрд╛рд▓рд╛рд╕реЛрд░": ["рдмрд╛рд▓рд╛рд╕реЛрд░", "рдирд┐рд▓рдЧрд┐рд░реА", "рдЬрд▓реЗрд╢реНрд╡рд░", "рд╕реЛрд░реЛ"],
  "рд╕рдВрднрд▓рдкреБрд░": ["рд╕рдВрднрд▓рдкреБрд░", "рдмреБрд░рд▓рд╛", "рд╣рд┐рд░рд╛рдХреБрдбрд╝", "рд░реЗрдВрдЧрд╛рд▓реА"],
  "рдЧрдВрдЬрд╛рдо": ["рдмреНрд░рд╣реНрдордкреБрд░", "рдЫрддреНрд░рдкреБрд░", "рднрдВрдЬрдирдЧрд░", "рдЖрд╕реНрдХрд╛"],
  "рдЕрдВрдЧреБрд▓": ["рдЕрдВрдЧреБрд▓", "рддрд╛рд▓рдЪреЗрд░", "рдЕрдердорд▓реНрд▓рд┐рдХ", "рдирд╛рд▓реНрдХреЛрдирдЧрд░"],
  "рдмрд▓рд╛рдВрдЧреАрд░": ["рдмрд▓рд╛рдВрдЧреАрд░", "рдЯрд┐рдЯрд▓рд╛рдЧрдврд╝", "рдХрд╛рдВрддрд╛рдмрд╛рдВрдЬреА", "рдкрдЯрдирд╛рдЧрдврд╝"],
  "рдмреМрдз": ["рдмреМрдзрдЧрдврд╝", "рдмреМрдВрд╕реБрдиреА", "рдХрд╛рдВрддрд╛рдорд╛рд▓", "рдордирдореБрдгреНрдбрд╛"],
  "рдмрд░рдЧрдврд╝": ["рдмрд░рдЧрдврд╝", "рдмрд░рдкрд╛рд▓реА", "рдкрджрдордкреБрд░", "рд╕реЛрд╣реЗрд▓рд╛"],
  "рднрджреНрд░рдХ": ["рднрджреНрд░рдХ", "рдмрд╕реБрджреЗрд╡рдкреБрд░", "рдЪрд╛рдВрджрдмрд▓реА", "рдзрд╛рдордирдЧрд░"],
  "рдЭрд╛рд░рд╕реБрдЧреБрдбрд╝рд╛": ["рдЭрд╛рд░рд╕реБрдЧреБрдбрд╝рд╛", "рдмреНрд░реЗрдЬрд░рд╛рдЬрдирдЧрд░", "рдмреЗрд▓рдкрд╛рд╣рд░", "рдмрдиреНрдзрдмрд╛рд╣рд╛рд▓"],
  "рдвреЗрдВрдХрд╛рдирд╛рд▓": ["рдвреЗрдВрдХрд╛рдирд╛рд▓", "рднреБрд╡рди", "рдХрд╛рдорд╛рдХреНрд╖реНрдпрд╛рдирдЧрд░", "рд╕рд░рдВрдЧрд╛"],
  "рдЬрд╛рдЬрдкреБрд░": ["рдЬрд╛рдЬрдкреБрд░", "рдмреНрдпрд╛рд╕рдирдЧрд░", "рд╕рд╛рдпрджрдкреБрд░", "рдХрдмрдЯрдмрд╛рдВрдзрд╛"],
  "рдЬрдЧрддрд╕рд┐рдВрд╣рдкреБрд░": ["рдЬрдЧрддрд╕рд┐рдВрд╣рдкреБрд░", "рдкрд░рд╛рджреАрдк", "рдкрд░рд╛рджреАрдкрдЧрдврд╝", "рдХреГрд╖реНрдгрд╛рдирдВрджрдкреБрд░"],
  "рдХреЗрдВрджреБрдЭрд░": ["рдХреЗрдВрджреБрдЭрд░", "рдмрд░рдмрд┐рд▓", "рдЪрдВрдкреБрдЖ", "рдЬрд╛рдЬрдВрдЧрд╛"],
  "рдХрд╛рд▓рд╛рд╣рд╛рдВрдбреА": ["рднрд╡рд╛рдиреАрдкрдЯрдирд╛", "рдЬреБрдирд╛рдЧрдврд╝", "рдХреЗрд╕рд┐рдВрдЧрд╛", "рдорджрдирдкреБрд░ рд░рд╛рдордкреБрд░"],
  "рдХреЛрд░рд╛рдкреБрдЯ": ["рдХреЛрд░рд╛рдкреБрдЯ", "рдЬрдпрдкреБрд░", "рд╕реБрдирд╛рдмреЗрдбрд╝рд╛", "рдХреЛрдЯрдкрдж"],
  "рдХреЗрдВрджреНрд░рд╛рдкрд╛рдбрд╝рд╛": ["рдХреЗрдВрджреНрд░рд╛рдкрд╛рдбрд╝рд╛", "рдкрддреНрддрд╛рдореБрдВрдбрдИ", "рд░рд╛рдЬрдХрдирд┐рдХрд╛", "рдФрд▓"],
  "рдорд▓рдХрд╛рдирдЧрд┐рд░реА": ["рдорд▓рдХрд╛рдирдЧрд┐рд░реА", "рдмрд╛рд▓рд┐рдореЗрд▓рд╛", "рдЪрд┐рддреНрд░рдХреЛрдВрдбрд╛", "рд╕реБрдирдХреА"],
  "рдордпреВрд░рднрдВрдЬ": ["рдмрд╛рд░рд┐рдкрджрд╛", "рд░рд╛рдпрд░рдВрдЧрдкреБрд░", "рдЙрдбрд╛рд▓рд╛", "рдХрд░рдВрдЬрд┐рдпрд╛"],
  "рдирдмрд░рдВрдЧрдкреБрд░": ["рдирдмрд░рдВрдЧрдкреБрд░", "рдЙрдорд░рдХреЛрдЯ", "рдкрд╛рдкрдбрд╝рд╛рд╣рд╛рдВрдбреА", "рд░рд╛рдЗрдЧрдврд╝"],
  "рдиреБрдЖрдкрд╛рдбрд╝рд╛": ["рдиреБрдЖрдкрд╛рдбрд╝рд╛", "рдЦрд╛рд░рд┐рдпрд╛рд░", "рдЦрд╛рд░рд┐рдпрд╛рд░ рд░реЛрдб", "рдХреЛрдордирд╛"],
  "рдирдпрд╛рдЧрдврд╝": ["рдирдпрд╛рдЧрдврд╝", "рдЗрддрдорд╛рдЯреА", "рдЪрдВрджрд╛рдкреБрд░", "рдУрдбрд╛рдЧрд╛рдВрд╡"],
  "рд░рд╛рдпрдЧрдврд╝рд╛": ["рд░рд╛рдпрдЧрдврд╝рд╛", "рдЧреБрдиреБрдкреБрд░", "рдХрд╛рд╢реАрдкреБрд░", "рдЯреАрдХрд┐рд░реА"],
  "рд╕реБрдмрд░реНрдгрдкреБрд░": ["рд╕реЛрдирдкреБрд░", "рдмрд┐рдирд┐рдХрд╛", "рддрд╛рд░рднрд╛", "рд╕реЛрдирдкреБрд░ рдЯрд╛рдЙрди"],
  "рд╕реБрдВрджрд░рдЧрдврд╝": ["рд╕реБрдВрджрд░рдЧрдврд╝", "рд░рд╛рдЙрд░рдХреЗрд▓рд╛", "рд░рд╛рдЬрдЧрд╛рдВрдЧрдкреБрд░", "рдмрд┐рд░рдорд┐рддреНрд░рд╛рдкреБрд░"]
}
,
  "Odia": {
  "рмХрмЯрмХ": ["рмХрмЯрмХ", "рмЪрнМрмжрнНрн▒рм╛рм░", "рмирм░рм╕рм┐рмВрм╣рмкрнБрм░", "рмЕрмармЧрмбрм╝"],
  "рмЦрнЛрм░рнНрмжрнНрмзрм╛": ["рмнрнБрммрмирнЗрм╢рнНрн▒рм░", "рмЬрмЯрмгрнА", "рммрнЗрмЧрнБрмирм┐рмЖ", "рммрм╛рм▓рнБрмЧрм╛рмБ"],
  "рмкрнБрм░рнА": ["рмкрнБрм░рнА", "рмХрнЛрмгрм╛рм░рнНрмХ", "рм╕рмдрнНрнЯрммрм╛рмжрнА", "рмбрнЗрм▓рм╛рмЩрнНрмЧ"],
  "рммрм╛рм▓рнЗрм╢рнНрн▒рм░": ["рммрм╛рм▓рнЗрм╢рнНрн▒рм░", "рмирм┐рм│рмЧрм┐рм░рм┐", "рмЬрм▓рнЗрм╢рнНрн▒рм░", "рм╕рнЛрм░рнЛ"],
  "рм╕рморнНрммрм▓рмкрнБрм░": ["рм╕рморнНрммрм▓рмкрнБрм░", "рммрнБрм░рнНрм▓рм╛", "рм╣рм┐рм░рм╛рмХрнБрмж", "рм░рнЗрмЩрнНрмЧрм╛рм▓рм┐"],
  "рмЧрмЮрнНрмЬрм╛рмо": ["рммрнНрм░рм╣рнНрмормкрнБрм░", "рмЫрмдрнНрм░рмкрнБрм░", "рмнрмЮрнНрмЬрмирмЧрм░", "рмЖрм╕рнНрмХрм╛"],
  "рмЕрмирнБрмЧрнБрм│": ["рмЕрмирнБрмЧрнБрм│", "рмдрм│рмЪрнЗрм░", "рмЕрмерморм▓рнНрм▓рм┐рмХ", "рмирм╛рм▓рнНрмХрнЛрмирмЧрм░"],
  "рммрм▓рм╛рмЩрнНрмЧрм┐рм░": ["рммрм▓рм╛рмЩрнНрмЧрм┐рм░", "рмЯрм┐рмЯрм┐рм▓рм╛рмЧрмбрм╝", "рмХрм╛рмирнНрмдрм╛рммрм╛рмЮрнНрмЬрм┐", "рмкрмЯрнНрмирм╛рмЧрмбрм╝"],
  "рммрнМрмврм╝": ["рммрнМрмврм╝рмЧрмбрм╝", "рммрм╛рмЙрмБрм╕рнБрмирнА", "рмХрм╛рмирнНрмдрм╛рморм╛рм│", "рмормгрморнБрмгрнНрмбрм╛"],
  "рммрм░рмЧрмбрм╝": ["рммрм░рмЧрмбрм╝", "рммрм░рмкрм╛рм▓рм┐", "рмкрмжрнНрмормкрнБрм░", "рм╕рнЛрм╣рнЗрм▓рм╛"],
  "рмнрмжрнНрм░рмХ": ["рмнрмжрнНрм░рмХ", "рммрм╕рнБрмжрнЗрммрмкрнБрм░", "рмЪрмирнНрмжрм╛рммрм│рм┐", "рмзрм╛рмормирмЧрм░"],
  "рмЭрм╛рм░рм╕рнБрмЧрнБрмбрм╝рм╛": ["рмЭрм╛рм░рм╕рнБрмЧрнБрмбрм╝рм╛", "рммрнНрм░рмЬрм░рм╛рмЬрмирмЧрм░", "рммрнЗрм│рмкрм╛рм╣рм╛рмбрм╝", "рммрмирнНрмзрммрм╛рм╣рм╛рм▓"],
  "рмврнЗрмЩрнНрмХрм╛рмирм╛рм│": ["рмврнЗрмЩрнНрмХрм╛рмирм╛рм│", "рмнрнБрммрми", "рмХрм╛рморм╛рмХрнНрм╖рнНрнЯрм╛рмирмЧрм░", "рм╕рм░рмЩрнНрмЧрм╛"],
  "рмЬрм╛рмЬрмкрнБрм░": ["рмЬрм╛рмЬрмкрнБрм░", "рммрнНрнЯрм╛рм╕рмирмЧрм░", "рм╕рм╛рнЯрмжрмкрнБрм░", "рмХрммрмЯрммрмирнНрмзрм╛"],
  "рмЬрмЧрмдрм╕рм┐рмВрм╣рмкрнБрм░": ["рмЬрмЧрмдрм╕рм┐рмВрм╣рмкрнБрм░", "рмкрм╛рм░рм╛рмжрнАрмк", "рмкрм╛рм░рм╛рмжрнАрмкрмЧрмбрм╝", "рмХрнГрм╖рнНрмгрм╛рмирмирнНрмжрмкрнБрм░"],
  "рмХрнЗрмирнНрмжрнБрмЭрм░": ["рмХрнЗрмирнНрмжрнБрмЭрм░", "рммрм░рммрм┐рм▓", "рмЪрморнНрмкрнБрмЖ", "рмЬрм╛рмЬрмЩрнНрмЧрм╛"],
  "рмХрм│рм╛рм╣рм╛рмгрнНрмбрм┐": ["рмнрммрм╛рмирнАрмкрм╛рмЯрмгрм╛", "рмЬрнБрмирм╛рмЧрмбрм╝", "рмХрнЗрм╕рм┐рмЩрнНрмЧрм╛", "рмормжрмирмкрнБрм░ рм░рм╛рмормкрнБрм░"],
  "рмХрнЛрм░рм╛рмкрнБрмЯ": ["рмХрнЛрм░рм╛рмкрнБрмЯ", "рмЬрнЯрмкрнБрм░", "рм╕рнБрмирм╛рммрнЗрмбрм╝рм╛", "рмХрнЛрмЯрмкрмж"],
  "рмХрнЗрмирнНрмжрнНрм░рм╛рмкрмбрм╝рм╛": ["рмХрнЗрмирнНрмжрнНрм░рм╛рмкрмбрм╝рм╛", "рмкрмЯрнНрмЯрм╛рморнБрмгрнНрмбрм╛рмЗ", "рм░рм╛рмЬрмХрмирм┐рмХрм╛", "рмФрм│"],
  "рморм▓рнНрмХрм╛рмирмЧрм┐рм░рм┐": ["рморм▓рнНрмХрм╛рмирмЧрм┐рм░рм┐", "рммрм╛рм│рм┐рморнЗрм│рм╛", "рмЪрм┐рмдрнНрм░рмХрнЛрмгрнНрмбрм╛", "рм╕рнБрмирнНрмХрм┐"],
  "рморнЯрнВрм░рмнрмЮрнНрмЬ": ["рммрм╛рм░рм┐рмкрмжрм╛", "рм░рм╛рмЗрм░рмЩрнНрмЧрмкрнБрм░", "рмЙрмбрм╝рм╛рм│рм╛", "рмХрм░рмЮрнНрмЬрм┐рмЖ"],
  "рмирммрм░рмЩрнНрмЧрмкрнБрм░": ["рмирммрм░рмЩрнНрмЧрмкрнБрм░", "рмЙрморнЗрм░рмХрнЛрмЯ", "рмкрм╛рмкрмбрм╛рм╣рм╛рмгрнНрмбрм┐", "рм░рм╛рмИрмШрм░"],
  "рмирнВрмЖрмкрмбрм╝рм╛": ["рмирнВрмЖрмкрмбрм╝рм╛", "рмЦрм╛рм░рм┐рмЖрм░", "рмЦрм╛рм░рм┐рмЖрм░ рм░рнЛрмбрм╝", "рмХрнЛрморнНрмирм╛"],
  "рмирнЯрм╛рмЧрмбрм╝": ["рмирнЯрм╛рмЧрмбрм╝", "рмЗрмдрморм╛рмЯрм┐", "рмЪрмирнНрмжрм╛рмкрнБрм░", "рмУрмбрм╝рм╛рмЧрм╛рмБ"],
  "рм░рм╛рнЯрмЧрмбрм╝рм╛": ["рм░рм╛рнЯрмЧрмбрм╝рм╛", "рмЧрнБрмгрнБрмкрнБрм░", "рмХрм╛рм╢рм┐рмкрнБрм░", "рмЯрм┐рмХрм┐рм░рм┐"],
  "рм╕рнБрммрм░рнНрмгрнНрмгрмкрнБрм░": ["рм╕рнЛрмирмкрнБрм░", "рммрм┐рмирм┐рмХрм╛", "рмдрм╛рм░рмнрм╛", "рм╕рнЛрмирмкрнБрм░ рмЯрм╛рмЙрми"],
  "рм╕рнБрмирнНрмжрм░рмЧрмбрм╝": ["рм╕рнБрмирнНрмжрм░рмЧрмбрм╝", "рм░рм╛рмЙрм░рмХрнЗрм▓рм╛", "рм░рм╛рмЬрмЧрм╛рмЩрнНрмЧрмкрнБрм░", "рммрм┐рм░рморм┐рмдрнНрм░рм╛рмкрнБрм░"]
}

}

# Get current language translation dictionary
t = {
    "English": {
        "app_title": "ЁЯдЦ AI Health Diagnosis Chatbot",
        "speak_symptoms": "ЁЯОЩя╕П Speak Symptoms",
        "input_label": "Enter symptoms (comma-separated):",
        "diagnose_btn": "Diagnose",
        "diagnosis_result": "ЁЯй║ Diagnosis Result:",
        "disease": "**Disease:**",
        "symptoms": "**Matching Symptoms:**",
        "treatment": "**Suggested Treatment:**",
        "clinic": "ЁЯПе Nearby Clinic Recommendation:",
        "name": "**Name:**",
        "address": "**Address:**",
        "distance": "**Distance:**",
        "phone": "**Phone:**",
        "warning": "тЪая╕П Please enter symptoms or speak using the mic button.",
        "location_title": "ЁЯЧ║я╕П Get Your Location",
        "loc_success": "Location Retrieved Successfully!",
        "lat": "ЁЯУН Latitude",
        "lon": "ЁЯУН Longitude",
        "accuracy": "тП▒я╕П Accuracy",
        "location_info": "Please allow location access in your browser.",
        "district_label": "ЁЯУН Select your District",
        "town_label": "Towns in"
    },
    "Hindi": {
        "app_title": "ЁЯдЦ рдПрдЖрдИ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдирд┐рджрд╛рди рдЪреИрдЯрдмреЛрдЯ",
        "speak_symptoms": "ЁЯОЩя╕П рд▓рдХреНрд╖рдг рдмреЛрд▓реЗрдВ",
        "input_label": "рд▓рдХреНрд╖рдг рджрд░реНрдЬ рдХрд░реЗрдВ (рдХреЙрдорд╛ рд╕реЗ рдЕрд▓рдЧ рдХрд░реЗрдВ):",
        "diagnose_btn": "рдирд┐рджрд╛рди рдХрд░реЗрдВ",
        "diagnosis_result": "ЁЯй║ рдирд┐рджрд╛рди рдкрд░рд┐рдгрд╛рдо:",
        "disease": "**рдмреАрдорд╛рд░реА:**",
        "symptoms": "**рдорд┐рд▓рддреЗ-рдЬреБрд▓рддреЗ рд▓рдХреНрд╖рдг:**",
        "treatment": "**рд╕реБрдЭрд╛рд╡рд┐рдд рдЗрд▓рд╛рдЬ:**",
        "clinic": "ЁЯПе рдирдЬрджреАрдХреА рдХреНрд▓рд┐рдирд┐рдХ рд╕рд┐рдлрд╛рд░рд┐рд╢:",
        "name": "**рдирд╛рдо:**",
        "address": "**рдкрддрд╛:**",
        "distance": "**рджреВрд░реА:**",
        "phone": "**рдлреЛрди:**",
        "warning": "тЪая╕П рдХреГрдкрдпрд╛ рд▓рдХреНрд╖рдг рджрд░реНрдЬ рдХрд░реЗрдВ рдпрд╛ рдорд╛рдЗрдХ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред",
        "location_title": "ЁЯЧ║я╕П рдЕрдкрдирд╛ рд╕реНрдерд╛рди рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ",
        "loc_success": "рд╕реНрдерд╛рди рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкреНрд░рд╛рдкреНрдд рд╣реБрдЖ!",
        "lat": "ЁЯУН рдЕрдХреНрд╖рд╛рдВрд╢",
        "lon": "ЁЯУН рджреЗрд╢рд╛рдВрддрд░",
        "accuracy": "тП▒я╕П рд╕рдЯреАрдХрддрд╛",
        "location_info": "рдХреГрдкрдпрд╛ рдЕрдкрдиреЗ рдмреНрд░рд╛рдЙрдЬрд╝рд░ рдореЗрдВ рд╕реНрдерд╛рди рдХреА рдЕрдиреБрдорддрд┐ рджреЗрдВред",
        "district_label": "ЁЯУН рдЕрдкрдирд╛ рдЬрд╝рд┐рд▓рд╛ рдЪреБрдиреЗрдВ",
        "town_label": "рд╢рд╣рд░ (рдЯрд╛рдЙрди)"
    },
    "Odia": {
        "app_title": "ЁЯдЦ рмПрмЖрмЗ рм╕рнНрн▒рм╛рм╕рнНрмернНрнЯ рмирм┐рмжрм╛рми рмЪрм╛рмЯрммрмЯрнН",
        "speak_symptoms": "ЁЯОЩя╕П рм▓рмХрнНрм╖рмг рмХрм╣рмирнНрмдрнБ",
        "input_label": "рм▓рмХрнНрм╖рмг рм▓рнЗрмЦрмирнНрмдрнБ (рмХрморм╛ рмжрнНрн▒рм╛рм░рм╛):",
        "diagnose_btn": "рмирм┐рмжрм╛рми рмХрм░рмирнНрмдрнБ",
        "diagnosis_result": "ЁЯй║ рмирм┐рмжрм╛рми рмлрм│рм╛рмлрм│:",
        "disease": "**рм░рнЛрмЧ:**",
        "symptoms": "**рморнЗрм│ рморм┐рм│рнБрмерм┐рммрм╛ рм▓рмХрнНрм╖рмг:**",
        "treatment": "**рмкрнНрм░рм╕рнНрмдрм╛рммрм┐рмд рмЪрм┐рмХрм┐рмдрнНрм╕рм╛:**",
        "clinic": "ЁЯПе рмирм┐рмХрмЯрм╕рнНрме рмХрнНрм▓рм┐рмирм┐рмХ рм╕рнБрмкрм╛рм░рм┐рм╢:",
        "name": "**рмирм╛рмо:**",
        "address": "**рмарм┐рмХрмгрм╛:**",
        "distance": "**рмжрнВрм░рмдрм╛:**",
        "phone": "**рмлрнЛрмирнН:**",
        "warning": "тЪая╕П рмжрнЯрм╛рмХрм░рм┐ рм▓рмХрнНрм╖рмг рмжрм┐рмЕрмирнНрмдрнБ рмХрм┐рморнНрммрм╛ рморм╛рмЗрмХрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред",
        "location_title": "ЁЯЧ║я╕П рмЕрммрм╕рнНрмерм╛рми рмирм┐рм░рнНрмгрнЯ рмХрм░рмирнНрмдрнБ",
        "loc_success": "рмЕрммрм╕рнНрмерм╛рми рморм┐рм│рм┐рмЧрм▓рм╛!",
        "lat": "ЁЯУН рмЕрмХрнНрм╖рм╛рмВрм╢",
        "lon": "ЁЯУН рмжрнЗрм╢рм╛рмВрмдрм░",
        "accuracy": "тП▒я╕П рм╕рмарм┐рмХрмдрм╛",
        "location_info": "рммрнНрм░рм╛рмЙрмЬрм░рм░рнЗ рмЕрмирнБрмормдрм┐ рмжрм┐рмЕрмирнНрмдрнБред",
        "district_label": "ЁЯУН рмЬрм┐рм▓рнНрм▓рм╛ рммрм╛рмЫрмирнНрмдрнБ",
        "town_label": "рм╕рм╣рм░ (рмЯрм╛рмЙрмирнН)"
    }
}[language]

# Title
st.title(t["app_title"])

# District & Town Selection
st.subheader(t["district_label"])
districts = list(districts_translated[language].keys())
selected_district = st.selectbox("District:", districts)

if selected_district:
    towns = districts_translated[language][selected_district]
    selected_town = st.selectbox(f"{t['town_label']} {selected_district}:", towns)
    st.success(f"ЁЯУМ {selected_district} тЖТ {selected_town}")
    st.session_state["district"] = selected_district
    st.session_state["town"] = selected_town

# Voice Input
if st.button(t["speak_symptoms"]):
    spoken_text = recognize_speech()
    if spoken_text:
        st.session_state["symptoms_input"] = spoken_text

# Text Input
#user_input = st.text_input(t["input_label"], 
                          # value=st.session_state.get("symptoms_input", ""))

user_input_1 = st.text_area("рд▓рдХреНрд╖рдг рджрд░реНрдЬ рдХрд░реЗрдВ (Type your symptoms)", "")
user_input= GoogleTranslator(source='auto', target='en').translate(user_input_1)

st.write("ЁЯУШ Translated to English:", user_input)

# Diagnosis Section
if st.button(t["diagnose_btn"]):
    if user_input:
        symptoms = user_input.split(',')
        result = get_diagnosis(symptoms)
        st.markdown("### ЁЯзм Diagnosis Summary")
        
        result["message"] = random.choice(messages).format(disease=result["disease"],treatment=result["treatment"])
        result["inhindi"] = GoogleTranslator(source='en', target='hi').translate(result["message"])
        result["in_odia"] = GoogleTranslator(source='en', target='or').translate(result["message"])


        st.write(result['message'])
        st.write(result['inhindi'])
        st.write(result['in_odia'])


        st.subheader(t["diagnosis_result"])
        st.write(t["disease"], result['disease'])
        st.write(t["symptoms"], ', '.join(result['symptoms']))
        st.write(t["treatment"], result['treatment'])
        # Show clinic(s) from CSV for selected district
        st.subheader(t["clinic"])
        matched_clinics = clinic_df[clinic_df["District"].str.lower() == selected_district.lower()]

        if not matched_clinics.empty:
            for _, clinic in matched_clinics.iterrows():
                st.write(t["name"], clinic["Clinic Name"])
                st.write(t["address"], clinic["Address"])
                st.markdown(f"[ЁЯМР Location Link]({clinic['Location URL']})")
                st.markdown("---")
        else:
            st.warning("ЁЯЪл No clinics found for this district.")



